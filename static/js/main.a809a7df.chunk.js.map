{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","selectedTabid","setSelectedTabid","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,mCACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,OACE,oBACEE,UAAWE,IAAW,CACpB,YAAaJ,EAAIC,KAAOH,EAAYG,KAGtC,UAAQ,MALV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHR,EAAYG,KAAOD,EAAIC,IAI3BJ,EAAcG,IARlB,SAWGA,EAAIO,SAdFP,EAAIC,WAsBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAaU,gBC3CXb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOU,EAAP,KAAsBC,EAAtB,KAEMd,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOU,MAAkBhB,EAAK,GAMvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYS,SAElC,cAAC,EAAD,CACEZ,KAAMA,EACNE,cAXkB,SAACG,GACvBY,EAAiBZ,EAAIC,KAWjBL,cAAeE,EAAYG,SC3BnCY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a809a7df.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../Tab';\n\ntype TabsType = {\n  tabs: Tab[]\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs: React.FC<TabsType> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => {\n              return (\n                <li\n                  className={classNames({\n                    'is-active': tab.id === selectedTab.id,\n                  })}\n                  key={tab.id}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${tab.id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => {\n                      if (selectedTab.id === tab.id) {\n                        return;\n                      }\n\n                      onTabSelected(tab);\n                    }}\n                  >\n                    {tab.title}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab?.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabid, setSelectedTabid] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabid) || tabs[0];\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTabid(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={handleTabSelect}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}