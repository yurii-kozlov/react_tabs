{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","onTabSelected","className","map","tab","classNames","id","href","onClick","title","content","App","useState","selectedTabid","setSelectedTabid","useMemo","find","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAC,EACI,EADJA,cAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GACR,OACE,oBACEF,UAAWG,IAAW,CACpB,YAAaD,EAAIE,KAAON,EAAYM,KAGtC,UAAQ,MALV,SAOE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,WACHR,EAAYM,KAAOF,EAAIE,IAI3BL,EAAcG,IARlB,SAWGA,EAAIK,SAdFL,EAAIE,WAsBnB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,gBACGF,QADH,IACGA,OADH,EACGA,EAAaU,cC7CTX,EAAO,CAClB,CAAEO,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASb,EAAK,GAAGO,IAA3D,mBAAOO,EAAP,KAAsBC,EAAtB,KAEMd,EAAce,mBAAQ,WAC1B,OAAOhB,EAAKiB,MAAK,SAAAZ,GAAG,OAAIA,EAAIE,KAAOO,MAAkBd,EAAK,KACzD,CAACc,IAMJ,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,EAAYS,SAElC,cAAC,EAAD,CACEV,KAAMA,EACNE,cAXkB,SAACG,GACvBU,EAAiBV,EAAIE,KAWjBN,YAAaA,QC7BrBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.af6b7dfd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../Tab';\n\n// type TabsType = {\n//   tabs: Tab[]\n//   selectedTabId: string,\n//   onTabSelected: (tab: Tab) => void\n// };\ntype TabsType = {\n  tabs: Tab[]\n  selectedTab: Tab\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs: React.FC<TabsType> = ({\n  tabs,\n  selectedTab,\n  onTabSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                className={classNames({\n                  'is-active': tab.id === selectedTab.id,\n                })}\n                key={tab.id}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTab.id === tab.id) {\n                      return;\n                    }\n\n                    onTabSelected(tab);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabid, setSelectedTabid] = useState(tabs[0].id);\n\n  const selectedTab = useMemo(() => {\n    return tabs.find(tab => tab.id === selectedTabid) || tabs[0];\n  }, [selectedTabid]);\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTabid(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={handleTabSelect}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}